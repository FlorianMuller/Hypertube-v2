// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Movie should renders <MovieComments> in english 1`] = `
<MovieComments
  movieId="Dokku_obrash"
  movieName="Titanic"
  reviews={
    Object {
      "movieRating": 4,
      "review": Array [
        Object {
          "authorUsername": "TestMan",
          "body": "That was actually really awesome",
          "date": 1577118711809,
          "id": "0123456789",
          "stars": 4,
        },
      ],
    }
  }
  setReviews={[Function]}
>
  <div
    className="makeStyles-containerRatingAndComment-1"
  >
    <Styled(MuiBox)
      borderColor="transparent"
      component="fieldset"
    >
      <fieldset
        className="MuiBox-root MuiBox-root-15"
      >
        <div
          className="makeStyles-movieRating-2"
        >
          Movie's rating
        </div>
      </fieldset>
    </Styled(MuiBox)>
    <span
      className="makeStyles-commentTitle-3"
    >
      Wanna say something about it ?
    </span>
    <WithStyles(ForwardRef(Paper))
      className="makeStyles-containerComment-4"
    >
      <ForwardRef(Paper)
        className="makeStyles-containerComment-4"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0",
            "elevation1": "MuiPaper-elevation1",
            "elevation10": "MuiPaper-elevation10",
            "elevation11": "MuiPaper-elevation11",
            "elevation12": "MuiPaper-elevation12",
            "elevation13": "MuiPaper-elevation13",
            "elevation14": "MuiPaper-elevation14",
            "elevation15": "MuiPaper-elevation15",
            "elevation16": "MuiPaper-elevation16",
            "elevation17": "MuiPaper-elevation17",
            "elevation18": "MuiPaper-elevation18",
            "elevation19": "MuiPaper-elevation19",
            "elevation2": "MuiPaper-elevation2",
            "elevation20": "MuiPaper-elevation20",
            "elevation21": "MuiPaper-elevation21",
            "elevation22": "MuiPaper-elevation22",
            "elevation23": "MuiPaper-elevation23",
            "elevation24": "MuiPaper-elevation24",
            "elevation3": "MuiPaper-elevation3",
            "elevation4": "MuiPaper-elevation4",
            "elevation5": "MuiPaper-elevation5",
            "elevation6": "MuiPaper-elevation6",
            "elevation7": "MuiPaper-elevation7",
            "elevation8": "MuiPaper-elevation8",
            "elevation9": "MuiPaper-elevation9",
            "outlined": "MuiPaper-outlined",
            "root": "MuiPaper-root",
            "rounded": "MuiPaper-rounded",
          }
        }
      >
        <div
          className="MuiPaper-root makeStyles-containerComment-4 MuiPaper-elevation1 MuiPaper-rounded"
        >
          <div
            className="makeStyles-containerPeople-5"
            id="scrollComment"
          >
            <div
              className="makeStyles-comment-7"
              key="0123456789"
            >
              <span
                style={
                  Object {
                    "fontSize": "1.1rem",
                  }
                }
              >
                TestMan
                 - 
                1577118711809
                 -
                 
                <a
                  href="/profile/TestMan"
                >
                  Profile
                </a>
              </span>
              <br />
              <WithStyles(ForwardRef(Rating))
                emptyIcon={
                  <UNDEFINED
                    color="primary"
                    style={
                      Object {
                        "fontSize": "1.1rem",
                      }
                    }
                  />
                }
                readOnly={true}
                size="small"
                value={4}
              >
                <ForwardRef(Rating)
                  classes={
                    Object {
                      "decimal": "MuiRating-decimal",
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "icon": "MuiRating-icon",
                      "iconActive": "MuiRating-iconActive",
                      "iconEmpty": "MuiRating-iconEmpty",
                      "iconFilled": "MuiRating-iconFilled",
                      "iconFocus": "MuiRating-iconFocus",
                      "iconHover": "MuiRating-iconHover",
                      "label": "MuiRating-label",
                      "pristine": "MuiRating-pristine",
                      "readOnly": "MuiRating-readOnly",
                      "root": "MuiRating-root",
                      "sizeLarge": "MuiRating-sizeLarge",
                      "sizeSmall": "MuiRating-sizeSmall",
                      "visuallyhidden": "MuiRating-visuallyhidden",
                    }
                  }
                  emptyIcon={
                    <UNDEFINED
                      color="primary"
                      style={
                        Object {
                          "fontSize": "1.1rem",
                        }
                      }
                    />
                  }
                  readOnly={true}
                  size="small"
                  value={4}
                >
                  <span
                    aria-label="4 Stars"
                    className="MuiRating-root MuiRating-sizeSmall MuiRating-readOnly"
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    role="img"
                  >
                    <span
                      key="1"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={1}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="2"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={2}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="3"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={3}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="4"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={4}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="5"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconEmpty"
                        value={5}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconEmpty"
                        >
                          <ForwardRef
                            color="primary"
                            style={
                              Object {
                                "fontSize": "1.1rem",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              color="primary"
                              style={
                                Object {
                                  "fontSize": "1.1rem",
                                }
                              }
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                color="primary"
                                style={
                                  Object {
                                    "fontSize": "1.1rem",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                  focusable="false"
                                  style={
                                    Object {
                                      "fontSize": "1.1rem",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                  </span>
                </ForwardRef(Rating)>
              </WithStyles(ForwardRef(Rating))>
              <div
                className="makeStyles-commentText-6"
              >
                That was actually really awesome
              </div>
            </div>
          </div>
          <div
            className="makeStyles-personalCommentContainer-8"
          >
            <WithStyles(ForwardRef(TextField))
              InputProps={
                Object {
                  "startAdornment": <ForwardRef(WithStyles)
                    position="start"
                  >
                    <UNDEFINED />
                  </ForwardRef(WithStyles)>,
                }
              }
              className="makeStyles-textField-9"
              inputProps={
                Object {
                  "maxLength": 1000,
                }
              }
              label="Tell us what you think about the movie"
              multiline={true}
              onChange={[Function]}
              value=""
            >
              <ForwardRef(TextField)
                InputProps={
                  Object {
                    "startAdornment": <ForwardRef(WithStyles)
                      position="start"
                    >
                      <UNDEFINED />
                    </ForwardRef(WithStyles)>,
                  }
                }
                className="makeStyles-textField-9"
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                inputProps={
                  Object {
                    "maxLength": 1000,
                  }
                }
                label="Tell us what you think about the movie"
                multiline={true}
                onChange={[Function]}
                value=""
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root makeStyles-textField-9"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={false}
                  required={false}
                  variant="standard"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root makeStyles-textField-9"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={false}
                    variant="standard"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root makeStyles-textField-9"
                    >
                      <WithStyles(ForwardRef(InputLabel))>
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={true}
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={true}
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                data-shrink={true}
                              >
                                Tell us what you think about the movie
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(Input))
                        autoFocus={false}
                        fullWidth={false}
                        inputProps={
                          Object {
                            "maxLength": 1000,
                          }
                        }
                        multiline={true}
                        onChange={[Function]}
                        startAdornment={
                          <ForwardRef(WithStyles)
                            position="start"
                          >
                            <UNDEFINED />
                          </ForwardRef(WithStyles)>
                        }
                        value=""
                      >
                        <ForwardRef(Input)
                          autoFocus={false}
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          fullWidth={false}
                          inputProps={
                            Object {
                              "maxLength": 1000,
                            }
                          }
                          multiline={true}
                          onChange={[Function]}
                          startAdornment={
                            <ForwardRef(WithStyles)
                              position="start"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          }
                          value=""
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root MuiInput-underline",
                                "underline": null,
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "maxLength": 1000,
                              }
                            }
                            multiline={true}
                            onChange={[Function]}
                            startAdornment={
                              <ForwardRef(WithStyles)
                                position="start"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            }
                            type="text"
                            value=""
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "maxLength": 1000,
                                }
                              }
                              multiline={true}
                              onChange={[Function]}
                              startAdornment={
                                <ForwardRef(WithStyles)
                                  position="start"
                                >
                                  <UNDEFINED />
                                </ForwardRef(WithStyles)>
                              }
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline MuiInputBase-adornedStart"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(InputAdornment))
                                  position="start"
                                >
                                  <ForwardRef(InputAdornment)
                                    classes={
                                      Object {
                                        "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                        "filled": "MuiInputAdornment-filled",
                                        "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                        "marginDense": "MuiInputAdornment-marginDense",
                                        "positionEnd": "MuiInputAdornment-positionEnd",
                                        "positionStart": "MuiInputAdornment-positionStart",
                                        "root": "MuiInputAdornment-root",
                                      }
                                    }
                                    position="start"
                                  >
                                    <div
                                      className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                    >
                                      <ForwardRef>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </div>
                                  </ForwardRef(InputAdornment)>
                                </WithStyles(ForwardRef(InputAdornment))>
                                <ForwardRef(TextareaAutosize)
                                  aria-invalid={false}
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline MuiInputBase-inputAdornedStart"
                                  disabled={false}
                                  maxLength={1000}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  value=""
                                >
                                  <textarea
                                    aria-invalid={false}
                                    autoFocus={false}
                                    className="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline MuiInputBase-inputAdornedStart"
                                    disabled={false}
                                    maxLength={1000}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    rows={1}
                                    style={
                                      Object {
                                        "height": 0,
                                        "overflow": "hidden",
                                      }
                                    }
                                    value=""
                                  />
                                  <textarea
                                    aria-hidden={true}
                                    className="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline MuiInputBase-inputAdornedStart"
                                    readOnly={true}
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "top": 0,
                                        "transform": "translateZ(0)",
                                        "visibility": "hidden",
                                      }
                                    }
                                    tabIndex={-1}
                                  />
                                </ForwardRef(TextareaAutosize)>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
            <div
              className="makeStyles-rateAndSendButton-10"
            >
              <div
                className="makeStyles-rateIt-11"
              >
                <span
                  className="makeStyles-askRating-12"
                >
                  Rate it :
                </span>
                <WithStyles(ForwardRef(Rating))
                  emptyIcon={
                    <UNDEFINED
                      color="primary"
                    />
                  }
                  name="simple-controlled"
                  onChange={[Function]}
                  value={0}
                >
                  <ForwardRef(Rating)
                    classes={
                      Object {
                        "decimal": "MuiRating-decimal",
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "icon": "MuiRating-icon",
                        "iconActive": "MuiRating-iconActive",
                        "iconEmpty": "MuiRating-iconEmpty",
                        "iconFilled": "MuiRating-iconFilled",
                        "iconFocus": "MuiRating-iconFocus",
                        "iconHover": "MuiRating-iconHover",
                        "label": "MuiRating-label",
                        "pristine": "MuiRating-pristine",
                        "readOnly": "MuiRating-readOnly",
                        "root": "MuiRating-root",
                        "sizeLarge": "MuiRating-sizeLarge",
                        "sizeSmall": "MuiRating-sizeSmall",
                        "visuallyhidden": "MuiRating-visuallyhidden",
                      }
                    }
                    emptyIcon={
                      <UNDEFINED
                        color="primary"
                      />
                    }
                    name="simple-controlled"
                    onChange={[Function]}
                    value={0}
                  >
                    <span
                      aria-label={null}
                      className="MuiRating-root"
                      onMouseLeave={[Function]}
                      onMouseMove={[Function]}
                      role={null}
                    >
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-1"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={1}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          1 Star
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-1"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={1}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-2"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={2}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          2 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-2"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={2}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-3"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={3}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          3 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-3"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={3}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-4"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={4}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          4 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-4"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={4}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-5"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={5}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          5 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-5"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={5}
                      />
                    </span>
                  </ForwardRef(Rating)>
                </WithStyles(ForwardRef(Rating))>
              </div>
              <WithStyles(ForwardRef(Button))
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                <ForwardRef(Button)
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary",
                      "containedSecondary": "MuiButton-containedSecondary",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                    component="button"
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          Send
                        </span>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
            </div>
          </div>
        </div>
      </ForwardRef(Paper)>
    </WithStyles(ForwardRef(Paper))>
  </div>
</MovieComments>
`;

exports[`Movie should renders <MovieComments> in french 1`] = `
<MovieComments
  movieId="Dokku_obrash"
  movieName="Titanic"
  reviews={
    Object {
      "movieRating": 4,
      "review": Array [
        Object {
          "authorUsername": "TestMan",
          "body": "That was actually really awesome",
          "date": 1577118711809,
          "id": "0123456789",
          "stars": 4,
        },
      ],
    }
  }
  setReviews={[Function]}
>
  <div
    className="makeStyles-containerRatingAndComment-1"
  >
    <Styled(MuiBox)
      borderColor="transparent"
      component="fieldset"
    >
      <fieldset
        className="MuiBox-root MuiBox-root-175"
      >
        <div
          className="makeStyles-movieRating-2"
        >
          Note du film
        </div>
      </fieldset>
    </Styled(MuiBox)>
    <span
      className="makeStyles-commentTitle-3"
    >
      Quelque chose à dire à son propos ?
    </span>
    <WithStyles(ForwardRef(Paper))
      className="makeStyles-containerComment-4"
    >
      <ForwardRef(Paper)
        className="makeStyles-containerComment-4"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0",
            "elevation1": "MuiPaper-elevation1",
            "elevation10": "MuiPaper-elevation10",
            "elevation11": "MuiPaper-elevation11",
            "elevation12": "MuiPaper-elevation12",
            "elevation13": "MuiPaper-elevation13",
            "elevation14": "MuiPaper-elevation14",
            "elevation15": "MuiPaper-elevation15",
            "elevation16": "MuiPaper-elevation16",
            "elevation17": "MuiPaper-elevation17",
            "elevation18": "MuiPaper-elevation18",
            "elevation19": "MuiPaper-elevation19",
            "elevation2": "MuiPaper-elevation2",
            "elevation20": "MuiPaper-elevation20",
            "elevation21": "MuiPaper-elevation21",
            "elevation22": "MuiPaper-elevation22",
            "elevation23": "MuiPaper-elevation23",
            "elevation24": "MuiPaper-elevation24",
            "elevation3": "MuiPaper-elevation3",
            "elevation4": "MuiPaper-elevation4",
            "elevation5": "MuiPaper-elevation5",
            "elevation6": "MuiPaper-elevation6",
            "elevation7": "MuiPaper-elevation7",
            "elevation8": "MuiPaper-elevation8",
            "elevation9": "MuiPaper-elevation9",
            "outlined": "MuiPaper-outlined",
            "root": "MuiPaper-root",
            "rounded": "MuiPaper-rounded",
          }
        }
      >
        <div
          className="MuiPaper-root makeStyles-containerComment-4 MuiPaper-elevation1 MuiPaper-rounded"
        >
          <div
            className="makeStyles-containerPeople-5"
            id="scrollComment"
          >
            <div
              className="makeStyles-comment-7"
              key="0123456789"
            >
              <span
                style={
                  Object {
                    "fontSize": "1.1rem",
                  }
                }
              >
                TestMan
                 - 
                1577118711809
                 -
                 
                <a
                  href="/profile/TestMan"
                >
                  Profile
                </a>
              </span>
              <br />
              <WithStyles(ForwardRef(Rating))
                emptyIcon={
                  <UNDEFINED
                    color="primary"
                    style={
                      Object {
                        "fontSize": "1.1rem",
                      }
                    }
                  />
                }
                readOnly={true}
                size="small"
                value={4}
              >
                <ForwardRef(Rating)
                  classes={
                    Object {
                      "decimal": "MuiRating-decimal",
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "icon": "MuiRating-icon",
                      "iconActive": "MuiRating-iconActive",
                      "iconEmpty": "MuiRating-iconEmpty",
                      "iconFilled": "MuiRating-iconFilled",
                      "iconFocus": "MuiRating-iconFocus",
                      "iconHover": "MuiRating-iconHover",
                      "label": "MuiRating-label",
                      "pristine": "MuiRating-pristine",
                      "readOnly": "MuiRating-readOnly",
                      "root": "MuiRating-root",
                      "sizeLarge": "MuiRating-sizeLarge",
                      "sizeSmall": "MuiRating-sizeSmall",
                      "visuallyhidden": "MuiRating-visuallyhidden",
                    }
                  }
                  emptyIcon={
                    <UNDEFINED
                      color="primary"
                      style={
                        Object {
                          "fontSize": "1.1rem",
                        }
                      }
                    />
                  }
                  readOnly={true}
                  size="small"
                  value={4}
                >
                  <span
                    aria-label="4 Stars"
                    className="MuiRating-root MuiRating-sizeSmall MuiRating-readOnly"
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    role="img"
                  >
                    <span
                      key="1"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={1}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="2"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={2}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="3"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={3}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="4"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconFilled"
                        value={4}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconFilled"
                        >
                          <ForwardRef
                            fontSize="inherit"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              fontSize="inherit"
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                fontSize="inherit"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                    <span
                      key="5"
                    >
                      <IconContainer
                        className="MuiRating-icon MuiRating-iconEmpty"
                        value={5}
                      >
                        <span
                          className="MuiRating-icon MuiRating-iconEmpty"
                        >
                          <ForwardRef
                            color="primary"
                            style={
                              Object {
                                "fontSize": "1.1rem",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              color="primary"
                              style={
                                Object {
                                  "fontSize": "1.1rem",
                                }
                              }
                            >
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                color="primary"
                                style={
                                  Object {
                                    "fontSize": "1.1rem",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                  focusable="false"
                                  style={
                                    Object {
                                      "fontSize": "1.1rem",
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                      </IconContainer>
                    </span>
                  </span>
                </ForwardRef(Rating)>
              </WithStyles(ForwardRef(Rating))>
              <div
                className="makeStyles-commentText-6"
              >
                That was actually really awesome
              </div>
            </div>
          </div>
          <div
            className="makeStyles-personalCommentContainer-8"
          >
            <WithStyles(ForwardRef(TextField))
              InputProps={
                Object {
                  "startAdornment": <ForwardRef(WithStyles)
                    position="start"
                  >
                    <UNDEFINED />
                  </ForwardRef(WithStyles)>,
                }
              }
              className="makeStyles-textField-9"
              inputProps={
                Object {
                  "maxLength": 1000,
                }
              }
              label="Dis nous ce que tu penses du film"
              multiline={true}
              onChange={[Function]}
              value=""
            >
              <ForwardRef(TextField)
                InputProps={
                  Object {
                    "startAdornment": <ForwardRef(WithStyles)
                      position="start"
                    >
                      <UNDEFINED />
                    </ForwardRef(WithStyles)>,
                  }
                }
                className="makeStyles-textField-9"
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                inputProps={
                  Object {
                    "maxLength": 1000,
                  }
                }
                label="Dis nous ce que tu penses du film"
                multiline={true}
                onChange={[Function]}
                value=""
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root makeStyles-textField-9"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={false}
                  required={false}
                  variant="standard"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root makeStyles-textField-9"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={false}
                    variant="standard"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root makeStyles-textField-9"
                    >
                      <WithStyles(ForwardRef(InputLabel))>
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={true}
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={true}
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                data-shrink={true}
                              >
                                Dis nous ce que tu penses du film
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(Input))
                        autoFocus={false}
                        fullWidth={false}
                        inputProps={
                          Object {
                            "maxLength": 1000,
                          }
                        }
                        multiline={true}
                        onChange={[Function]}
                        startAdornment={
                          <ForwardRef(WithStyles)
                            position="start"
                          >
                            <UNDEFINED />
                          </ForwardRef(WithStyles)>
                        }
                        value=""
                      >
                        <ForwardRef(Input)
                          autoFocus={false}
                          classes={
                            Object {
                              "colorSecondary": "MuiInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "marginDense": "MuiInput-marginDense",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root",
                              "underline": "MuiInput-underline",
                            }
                          }
                          fullWidth={false}
                          inputProps={
                            Object {
                              "maxLength": 1000,
                            }
                          }
                          multiline={true}
                          onChange={[Function]}
                          startAdornment={
                            <ForwardRef(WithStyles)
                              position="start"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          }
                          value=""
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            classes={
                              Object {
                                "colorSecondary": "MuiInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "marginDense": "MuiInput-marginDense",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root MuiInput-underline",
                                "underline": null,
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "maxLength": 1000,
                              }
                            }
                            multiline={true}
                            onChange={[Function]}
                            startAdornment={
                              <ForwardRef(WithStyles)
                                position="start"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            }
                            type="text"
                            value=""
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "maxLength": 1000,
                                }
                              }
                              multiline={true}
                              onChange={[Function]}
                              startAdornment={
                                <ForwardRef(WithStyles)
                                  position="start"
                                >
                                  <UNDEFINED />
                                </ForwardRef(WithStyles)>
                              }
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline MuiInputBase-adornedStart"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(InputAdornment))
                                  position="start"
                                >
                                  <ForwardRef(InputAdornment)
                                    classes={
                                      Object {
                                        "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                        "filled": "MuiInputAdornment-filled",
                                        "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                        "marginDense": "MuiInputAdornment-marginDense",
                                        "positionEnd": "MuiInputAdornment-positionEnd",
                                        "positionStart": "MuiInputAdornment-positionStart",
                                        "root": "MuiInputAdornment-root",
                                      }
                                    }
                                    position="start"
                                  >
                                    <div
                                      className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                    >
                                      <ForwardRef>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </div>
                                  </ForwardRef(InputAdornment)>
                                </WithStyles(ForwardRef(InputAdornment))>
                                <ForwardRef(TextareaAutosize)
                                  aria-invalid={false}
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline MuiInputBase-inputAdornedStart"
                                  disabled={false}
                                  maxLength={1000}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  value=""
                                >
                                  <textarea
                                    aria-invalid={false}
                                    autoFocus={false}
                                    className="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline MuiInputBase-inputAdornedStart"
                                    disabled={false}
                                    maxLength={1000}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    rows={1}
                                    style={
                                      Object {
                                        "height": 0,
                                        "overflow": "hidden",
                                      }
                                    }
                                    value=""
                                  />
                                  <textarea
                                    aria-hidden={true}
                                    className="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline MuiInputBase-inputAdornedStart"
                                    readOnly={true}
                                    style={
                                      Object {
                                        "height": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "top": 0,
                                        "transform": "translateZ(0)",
                                        "visibility": "hidden",
                                      }
                                    }
                                    tabIndex={-1}
                                  />
                                </ForwardRef(TextareaAutosize)>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Input)>
                      </WithStyles(ForwardRef(Input))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
            <div
              className="makeStyles-rateAndSendButton-10"
            >
              <div
                className="makeStyles-rateIt-11"
              >
                <span
                  className="makeStyles-askRating-12"
                >
                  Note le :
                </span>
                <WithStyles(ForwardRef(Rating))
                  emptyIcon={
                    <UNDEFINED
                      color="primary"
                    />
                  }
                  name="simple-controlled"
                  onChange={[Function]}
                  value={0}
                >
                  <ForwardRef(Rating)
                    classes={
                      Object {
                        "decimal": "MuiRating-decimal",
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "icon": "MuiRating-icon",
                        "iconActive": "MuiRating-iconActive",
                        "iconEmpty": "MuiRating-iconEmpty",
                        "iconFilled": "MuiRating-iconFilled",
                        "iconFocus": "MuiRating-iconFocus",
                        "iconHover": "MuiRating-iconHover",
                        "label": "MuiRating-label",
                        "pristine": "MuiRating-pristine",
                        "readOnly": "MuiRating-readOnly",
                        "root": "MuiRating-root",
                        "sizeLarge": "MuiRating-sizeLarge",
                        "sizeSmall": "MuiRating-sizeSmall",
                        "visuallyhidden": "MuiRating-visuallyhidden",
                      }
                    }
                    emptyIcon={
                      <UNDEFINED
                        color="primary"
                      />
                    }
                    name="simple-controlled"
                    onChange={[Function]}
                    value={0}
                  >
                    <span
                      aria-label={null}
                      className="MuiRating-root"
                      onMouseLeave={[Function]}
                      onMouseMove={[Function]}
                      role={null}
                    >
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-1"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={1}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          1 Star
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-1"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={1}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-2"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={2}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          2 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-2"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={2}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-3"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={3}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          3 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-3"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={3}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-4"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={4}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          4 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-4"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={4}
                      />
                      <label
                        className="MuiRating-label"
                        htmlFor="simple-controlled-5"
                      >
                        <IconContainer
                          className="MuiRating-icon MuiRating-iconEmpty"
                          value={5}
                        >
                          <span
                            className="MuiRating-icon MuiRating-iconEmpty"
                          >
                            <ForwardRef
                              color="primary"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                color="primary"
                              >
                                <ForwardRef(SvgIcon)
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                  color="primary"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef>
                          </span>
                        </IconContainer>
                        <span
                          className="MuiRating-visuallyhidden"
                        >
                          5 Stars
                        </span>
                      </label>
                      <input
                        checked={false}
                        className="MuiRating-visuallyhidden"
                        disabled={false}
                        id="simple-controlled-5"
                        name="simple-controlled"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="radio"
                        value={5}
                      />
                    </span>
                  </ForwardRef(Rating)>
                </WithStyles(ForwardRef(Rating))>
              </div>
              <WithStyles(ForwardRef(Button))
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                <ForwardRef(Button)
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary",
                      "containedSecondary": "MuiButton-containedSecondary",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                    component="button"
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label"
                        >
                          Envoyer
                        </span>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
            </div>
          </div>
        </div>
      </ForwardRef(Paper)>
    </WithStyles(ForwardRef(Paper))>
  </div>
</MovieComments>
`;
