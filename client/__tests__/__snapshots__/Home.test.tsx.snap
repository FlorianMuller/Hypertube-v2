// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should render <Home> in english 1`] = `
<StaticRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    staticContext={Object {}}
  >
    <Home>
      <div
        className="makeStyles-mainPoster-1"
      >
        <div
          className="makeStyles-boxContent-2"
        >
          <MovieThumbnail
            key="1"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "comedy",
                ],
                "id": "1",
                "rating": 4,
                "runtime": 100,
                "summary": "The one with Dany Boon you kwow, all the France is gonna laugh",
                "title": "The comic movies",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="1"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The comic movies
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The comic movies
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      The one with Dany Boon you kwow, all the France is gonna laugh
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="comedy"
                      label="comedy"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="comedy"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                comedy
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/1"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/1"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/1"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Watch film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
          <MovieThumbnail
            key="2"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "action",
                  "adventure",
                ],
                "id": "2",
                "rating": 4,
                "runtime": 100,
                "summary": "You've seen it hundreds time, but here it is, an other one",
                "title": "The marvel block buster",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="2"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The marvel block buster
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The marvel block buster
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      You've seen it hundreds time, but here it is, an other one
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="action"
                      label="action"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="action"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                action
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="adventure"
                      label="adventure"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="adventure"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                adventure
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/2"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/2"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/2"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Watch film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
          <MovieThumbnail
            key="3"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "action",
                  "adventure",
                ],
                "id": "3",
                "rating": 4,
                "runtime": 100,
                "summary": "The one with jokes for the parents",
                "title": "The cool kid moovie",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="3"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The cool kid moovie
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The cool kid moovie
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      The one with jokes for the parents
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="action"
                      label="action"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="action"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                action
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="adventure"
                      label="adventure"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="adventure"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                adventure
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/3"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/3"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/3"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Watch film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
          <MovieThumbnail
            key="4"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "horror",
                ],
                "id": "4",
                "rating": 4,
                "runtime": 100,
                "summary": "I don't know anything about it, I was too afraid to see it",
                "title": "The horror movie",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="4"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The horror movie
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The horror movie
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      I don't know anything about it, I was too afraid to see it
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="horror"
                      label="horror"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="horror"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                horror
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/4"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/4"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/4"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Watch film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
        </div>
      </div>
    </Home>
  </Router>
</StaticRouter>
`;

exports[`Home should render <Home> in french 1`] = `
<StaticRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    staticContext={Object {}}
  >
    <Home>
      <div
        className="makeStyles-mainPoster-1"
      >
        <div
          className="makeStyles-boxContent-2"
        >
          <MovieThumbnail
            key="1"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "comedy",
                ],
                "id": "1",
                "rating": 4,
                "runtime": 100,
                "summary": "The one with Dany Boon you kwow, all the France is gonna laugh",
                "title": "The comic movies",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="1"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The comic movies
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The comic movies
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      The one with Dany Boon you kwow, all the France is gonna laugh
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="comedy"
                      label="comedy"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="comedy"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                comedy
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/1"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/1"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/1"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Regarder le film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
          <MovieThumbnail
            key="2"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "action",
                  "adventure",
                ],
                "id": "2",
                "rating": 4,
                "runtime": 100,
                "summary": "You've seen it hundreds time, but here it is, an other one",
                "title": "The marvel block buster",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="2"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The marvel block buster
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The marvel block buster
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      You've seen it hundreds time, but here it is, an other one
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="action"
                      label="action"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="action"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                action
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="adventure"
                      label="adventure"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="adventure"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                adventure
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/2"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/2"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/2"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Regarder le film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
          <MovieThumbnail
            key="3"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "action",
                  "adventure",
                ],
                "id": "3",
                "rating": 4,
                "runtime": 100,
                "summary": "The one with jokes for the parents",
                "title": "The cool kid moovie",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="3"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The cool kid moovie
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The cool kid moovie
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      The one with jokes for the parents
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="action"
                      label="action"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="action"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                action
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="adventure"
                      label="adventure"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="adventure"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                adventure
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/3"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/3"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/3"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Regarder le film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
          <MovieThumbnail
            key="4"
            movie={
              Object {
                "cover": "path/to/pic",
                "genres": Array [
                  "horror",
                ],
                "id": "4",
                "rating": 4,
                "runtime": 100,
                "summary": "I don't know anything about it, I was too afraid to see it",
                "title": "The horror movie",
                "viewed": true,
                "year": 2020,
              }
            }
          >
            <div
              className="makeStyles-thumbnailContainer-4"
              key="4"
            >
              <Image
                animationDuration={500}
                aspectRatio={1}
                color="rgba(0,0,0,0)"
                disableError={false}
                disableSpinner={true}
                disableTransition={false}
                errorIcon={
                  <ForwardRef(WithStyles)
                    className="makeStyles-altContainer-14"
                  >
                    <ForwardRef(WithStyles)
                      variant="h4"
                    >
                      The horror movie
                    </ForwardRef(WithStyles)>
                  </ForwardRef(WithStyles)>
                }
                imageStyle={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
                loading={
                  <ForwardRef(WithStyles)
                    size={48}
                  />
                }
                src="path/to/pic"
                style={
                  Object {
                    "height": 450,
                    "width": 300,
                  }
                }
              >
                <div
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 450,
                      "paddingTop": "calc(1 / 1 * 100%)",
                      "position": "relative",
                      "width": 300,
                    }
                  }
                >
                  <img
                    onError={[Function]}
                    onLoad={[Function]}
                    src="path/to/pic"
                    style={
                      Object {
                        "filterBrightness": 0,
                        "filterSaturate": 20,
                        "height": 450,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transition": "
        filterBrightness 375ms cubic-bezier(0.4, 0.0, 0.2, 1),
        filterSaturate 500ms cubic-bezier(0.4, 0.0, 0.2, 1),
        opacity 250ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                        "width": 300,
                      }
                    }
                  />
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "height": "100%",
                        "justifyContent": "center",
                        "left": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </div>
              </Image>
              <div
                className="makeStyles-thumbnailOverlay-5"
              >
                <ForwardRef
                  color="primary"
                  fontSize="small"
                >
                  <WithStyles(ForwardRef(SvgIcon))
                    color="primary"
                    fontSize="small"
                  >
                    <ForwardRef(SvgIcon)
                      classes={
                        Object {
                          "colorAction": "MuiSvgIcon-colorAction",
                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                          "colorError": "MuiSvgIcon-colorError",
                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                          "root": "MuiSvgIcon-root",
                        }
                      }
                      color="primary"
                      fontSize="small"
                    >
                      <svg
                        aria-hidden="true"
                        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
                        focusable="false"
                        role="presentation"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                        />
                      </svg>
                    </ForwardRef(SvgIcon)>
                  </WithStyles(ForwardRef(SvgIcon))>
                </ForwardRef>
                <WithStyles(ForwardRef(Typography))
                  variant="h5"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h5"
                  >
                    <h5
                      className="MuiTypography-root MuiTypography-h5"
                    >
                      The horror movie
                    </h5>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      2020
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  className="makeStyles-summary-9"
                  variant="caption"
                >
                  <ForwardRef(Typography)
                    className="makeStyles-summary-9"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="caption"
                  >
                    <span
                      className="MuiTypography-root makeStyles-summary-9 MuiTypography-caption"
                    >
                      I don't know anything about it, I was too afraid to see it
                    </span>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <div
                  className="makeStyles-metaInfos-10"
                >
                  <div>
                    <WithStyles(ForwardRef(Chip))
                      className="makeStyles-tag-8"
                      clickable={true}
                      color="primary"
                      key="horror"
                      label="horror"
                    >
                      <ForwardRef(Chip)
                        className="makeStyles-tag-8"
                        classes={
                          Object {
                            "avatar": "MuiChip-avatar",
                            "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                            "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                            "avatarSmall": "MuiChip-avatarSmall",
                            "clickable": "MuiChip-clickable",
                            "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                            "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                            "colorPrimary": "MuiChip-colorPrimary",
                            "colorSecondary": "MuiChip-colorSecondary",
                            "deletable": "MuiChip-deletable",
                            "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                            "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                            "deleteIcon": "MuiChip-deleteIcon",
                            "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                            "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                            "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                            "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                            "deleteIconSmall": "MuiChip-deleteIconSmall",
                            "disabled": "Mui-disabled",
                            "icon": "MuiChip-icon",
                            "iconColorPrimary": "MuiChip-iconColorPrimary",
                            "iconColorSecondary": "MuiChip-iconColorSecondary",
                            "iconSmall": "MuiChip-iconSmall",
                            "label": "MuiChip-label",
                            "labelSmall": "MuiChip-labelSmall",
                            "outlined": "MuiChip-outlined",
                            "outlinedPrimary": "MuiChip-outlinedPrimary",
                            "outlinedSecondary": "MuiChip-outlinedSecondary",
                            "root": "MuiChip-root",
                            "sizeSmall": "MuiChip-sizeSmall",
                          }
                        }
                        clickable={true}
                        color="primary"
                        label="horror"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                          component="div"
                          onKeyUp={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            onKeyUp={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <div
                              className="MuiButtonBase-root MuiChip-root makeStyles-tag-8 MuiChip-colorPrimary MuiChip-clickableColorPrimary MuiChip-clickable"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <span
                                className="MuiChip-label"
                              >
                                horror
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Chip)>
                    </WithStyles(ForwardRef(Chip))>
                  </div>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-rating-11"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-rating-11"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-rating-11 MuiTypography-body1"
                      >
                        4
                         
                        <ForwardRef
                          className="makeStyles-ratingIcon-13"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-ratingIcon-13"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-ratingIcon-13"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-ratingIcon-13"
                                focusable="false"
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                />
                                <path
                                  d="M0 0h24v24H0z"
                                  fill="none"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                        <span>
                          - 
                          100
                           mins
                        </span>
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <Link
                    className="makeStyles-watchLink-12"
                    to="/movie/4"
                  >
                    <LinkAnchor
                      className="makeStyles-watchLink-12"
                      href="/movie/4"
                      navigate={[Function]}
                    >
                      <a
                        className="makeStyles-watchLink-12"
                        href="/movie/4"
                        onClick={[Function]}
                      >
                        <WithStyles(ForwardRef(Button))
                          color="primary"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit",
                                "contained": "MuiButton-contained",
                                "containedPrimary": "MuiButton-containedPrimary",
                                "containedSecondary": "MuiButton-containedSecondary",
                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                "disableElevation": "MuiButton-disableElevation",
                                "disabled": "Mui-disabled",
                                "endIcon": "MuiButton-endIcon",
                                "focusVisible": "Mui-focusVisible",
                                "fullWidth": "MuiButton-fullWidth",
                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                "label": "MuiButton-label",
                                "outlined": "MuiButton-outlined",
                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                "root": "MuiButton-root",
                                "sizeLarge": "MuiButton-sizeLarge",
                                "sizeSmall": "MuiButton-sizeSmall",
                                "startIcon": "MuiButton-startIcon",
                                "text": "MuiButton-text",
                                "textPrimary": "MuiButton-textPrimary",
                                "textSecondary": "MuiButton-textSecondary",
                                "textSizeLarge": "MuiButton-textSizeLarge",
                                "textSizeSmall": "MuiButton-textSizeSmall",
                              }
                            }
                            color="primary"
                            variant="contained"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              type="button"
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label"
                                  >
                                    Regarder le film
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(Button)>
                        </WithStyles(ForwardRef(Button))>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </div>
            </div>
          </MovieThumbnail>
        </div>
      </div>
    </Home>
  </Router>
</StaticRouter>
`;
